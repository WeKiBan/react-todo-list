{"version":3,"sources":["TodoForm.js","Todo.js","TodoList.js","App.js","index.js"],"names":["TodoForm","addTodo","useState","id","task","completed","todo","setTodo","class","onSubmit","e","preventDefault","trim","uuidv4","TextField","label","name","value","onChange","target","placeholder","Button","type","Todo","removeTodo","toggleComplete","ListItem","style","display","Checkbox","onClick","checked","complete","Typography","variant","textDecoration","IconButton","TodoList","todos","List","map","LOCAL_STORAGE_KEY","App","setTodos","useEffect","localStorage","setItem","JSON","stringify","storageTodos","parse","getItem","className","padding","filter","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"yRAIe,SAASA,EAAT,GAAgC,IAAZC,EAAW,EAAXA,QAAW,EACpBC,mBAAS,CAC/BC,GAAI,GACJC,KAAM,GACNC,WAAW,IAJ+B,mBACrCC,EADqC,KAC/BC,EAD+B,KAoB5C,OACE,uBAAMC,MAAM,YAAYC,SAV1B,SAAsBC,GACpBA,EAAEC,iBACEL,EAAKF,KAAKQ,SACZX,EAAQ,2BAAKK,GAAN,IAAYH,GAAIU,iBAEvBN,EAAQ,2BAAKD,GAAN,IAAYF,KAAM,QAK3B,UACE,cAACU,EAAA,EAAD,CACEC,MAAM,OACNC,KAAK,OACLC,MAAOX,EAAKF,KACZc,SAnBN,SAA+BR,GAC7BH,EAAQ,2BAAKD,GAAN,IAAYF,KAAMM,EAAES,OAAOF,UAmB9BG,YAAY,iBAEd,cAACC,EAAA,EAAD,CAAQC,KAAK,SAAb,yB,yDCCSC,MA9Bf,YAAqD,IAArCC,EAAoC,EAApCA,WAAYC,EAAwB,EAAxBA,eAAgBnB,EAAQ,EAARA,KAS1C,OACE,eAACoB,EAAA,EAAD,CAAUC,MAAO,CAAEC,QAAS,QAA5B,UACE,cAACC,EAAA,EAAD,CACEC,QAXN,WACEL,EAAenB,EAAKH,KAWhB4B,QAASzB,EAAK0B,WAEhB,cAACC,EAAA,EAAD,CACEC,QAAQ,QACRP,MAAO,CACLQ,eAAgB7B,EAAKD,UAAY,eAAiB,MAHtD,SAMGC,EAAKF,OAER,cAACgC,EAAA,EAAD,CAAYN,QAlBhB,WACEN,EAAWlB,EAAKH,KAiBd,SACE,cAAC,IAAD,U,SCTOkC,MAff,YAA0D,IAAtCb,EAAqC,EAArCA,WAAYC,EAAyB,EAAzBA,eAAgBa,EAAS,EAATA,MAC9C,OACE,cAACC,EAAA,EAAD,UACGD,EAAME,KAAI,SAAClC,GAAD,OACT,cAAC,EAAD,CACEkB,WAAYA,EACZC,eAAgBA,EAChBtB,GAAIG,EAAKH,GACTG,KAAMA,UCLVmC,EAAoB,wBAoDXC,MAlDf,WAAgB,IAAD,EACaxC,mBAAS,IADtB,mBACNoC,EADM,KACCK,EADD,KAmCb,OAhCAC,qBAAU,WACRC,aAAaC,QAAQL,EAAmBM,KAAKC,UAAUV,MACtD,CAACA,IAEJM,qBAAU,WACR,IAAMK,EAAeF,KAAKG,MAAML,aAAaM,QAAQV,IACjDQ,GACFN,EAASM,KAEV,IAwBD,sBAAKG,UAAU,MAAf,UACE,cAACnB,EAAA,EAAD,CAAYN,MAAO,CAAE0B,QAAS,IAAMnB,QAAQ,KAA5C,wBAGA,cAAClC,EAAD,CAAUC,QA1Bd,SAAiBK,GACfqC,EAAS,CAACrC,GAAF,mBAAWgC,QA0BjB,cAAC,EAAD,CACEd,WAVN,SAAoBrB,GAClBwC,EAASL,EAAMgB,QAAO,SAAChD,GAAD,OAAUA,EAAKH,KAAOA,OAUxCsB,eAzBN,SAAwBtB,GACtBwC,EACEL,EAAME,KAAI,SAAClC,GACT,OAAIA,EAAKH,KAAOA,EACP,2BACFG,GADL,IAEED,WAAYC,EAAKD,YAGdC,OAiBPgC,MAAOA,QChDfiB,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.fef2f377.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport { v4 as uuidv4 } from 'uuid';\nimport { Button, TextField } from '@material-ui/core';\n\nexport default function TodoForm({ addTodo }) {\n  const [todo, setTodo] = useState({\n    id: '',\n    task: '',\n    completed: false,\n  });\n\n  function handleTaskInputChange(e) {\n    setTodo({ ...todo, task: e.target.value });\n  }\n\n  function handleSubmit(e) {\n    e.preventDefault();\n    if (todo.task.trim()) {\n      addTodo({ ...todo, id: uuidv4() });\n      // reset task input\n      setTodo({ ...todo, task: '' });\n    }\n  }\n\n  return (\n    <form class=\"todo-form\" onSubmit={handleSubmit}>\n      <TextField\n        label=\"Task\"\n        name=\"task\"\n        value={todo.task}\n        onChange={handleTaskInputChange}\n        placeholder=\"Add New Item\"\n      />\n      <Button type=\"submit\">Add Task</Button>\n    </form>\n  );\n}\n","import React from 'react';\nimport { Checkbox, IconButton, ListItem, Typography } from '@material-ui/core';\nimport CloseIcon from '@material-ui/icons/Close';\n\nfunction Todo({ removeTodo, toggleComplete, todo }) {\n  function handleCheckboxClick() {\n    toggleComplete(todo.id);\n  }\n\n  function handleRemoveTodo() {\n    removeTodo(todo.id);\n  }\n\n  return (\n    <ListItem style={{ display: 'flex' }}>\n      <Checkbox\n        onClick={handleCheckboxClick}\n        checked={todo.complete}\n      />\n      <Typography\n        variant=\"body1\"\n        style={{\n          textDecoration: todo.completed ? 'line-through' : null,\n        }}\n      >\n        {todo.task}\n      </Typography>\n      <IconButton onClick={handleRemoveTodo}>\n        <CloseIcon />\n      </IconButton>\n    </ListItem>\n  );\n}\n\nexport default Todo;\n","import React from 'react';\nimport Todo from './Todo';\nimport { List } from '@material-ui/core';\n\nfunction TodoList({ removeTodo, toggleComplete, todos }) {\n  return (\n    <List>\n      {todos.map((todo) => (\n        <Todo\n          removeTodo={removeTodo}\n          toggleComplete={toggleComplete}\n          id={todo.id}\n          todo={todo}\n        />\n      ))}\n    </List>\n  );\n}\n\nexport default TodoList;\n","import './App.css';\nimport React, { useEffect, useState } from 'react';\nimport TodoForm from './TodoForm';\nimport TodoList from './TodoList';\nimport Typography from '@material-ui/core/Typography';\n\n\nconst LOCAL_STORAGE_KEY = 'react-todo-list-todos';\n\nfunction App() {\n  const [todos, setTodos] = useState([]);\n\n  useEffect(() => {\n    localStorage.setItem(LOCAL_STORAGE_KEY, JSON.stringify(todos));\n  }, [todos]);\n\n  useEffect(() => {\n    const storageTodos = JSON.parse(localStorage.getItem(LOCAL_STORAGE_KEY));\n    if (storageTodos) {\n      setTodos(storageTodos);\n    }\n  }, []);\n\n  function addTodo(todo) {\n    setTodos([todo, ...todos]);\n  }\n\n  function toggleComplete(id) {\n    setTodos(\n      todos.map((todo) => {\n        if (todo.id === id) {\n          return {\n            ...todo,\n            completed: !todo.completed,\n          };\n        }\n        return todo;\n      })\n    );\n  }\n\n  function removeTodo(id) {\n    setTodos(todos.filter((todo) => todo.id !== id));\n  }\n  return (\n    <div className=\"App\">\n      <Typography style={{ padding: 16 }} variant=\"h1\">\n        React Todo\n      </Typography>\n      <TodoForm addTodo={addTodo} />\n      <TodoList\n        removeTodo={removeTodo}\n        toggleComplete={toggleComplete}\n        todos={todos}\n      />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}